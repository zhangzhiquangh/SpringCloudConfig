关机
shutdown -h now

解压
tar -zxvf apache-tomcat-9.0.31.tar.gz

查看防火墙状态
firewall-cmd --state

查看防火墙所有开放的端口
firewall-cmd --zone=public --list-ports

开放某个端口
firewall-cmd --zone=public --add-port=8080/tcp --permanent

不开放某个端口
firewall-cmd --zone=public --remove-port=8080/tcp --permanent

配置生效
firewall-cmd --reload

=======================================================================================================
目录结构说明
/bin
bin是Binary的缩写，这个目录存放着最经常使用的命令

/usr
这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program file目录

/usr/bin
系统用户使用的应用程序，就是/bin

/usr/sbin
超级用户使用的比较高级的管理程序和系统守护程序

/etc
这个目录用来存放所有的系统管理所需要的配置文件和子目录

/var
这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件
=======================================================================================================

yum命令
yum [options] [command] [package ...]
options:可选，选项包括-h（帮助），-y（当安装过程提示选择全部为yes），-q（不显示安装过程）等等
command:要进行的操作
package:操作的对象

yum常用命令
1.列表所有可更新的软件清单：yum check-update
2.更新所有软件命令：yum update
3.仅安装指定的软件命令：yum install <package_name>
4.仅更新指定的软件命令：yum update <package_name>
5.列表所有可安装的软件清单：yum list
6.删除软件包命令：yum remove <package_name>
7.查找软件包命令：yum search <keyword>
8.清除缓存命令：
yum clean packages:清除缓存目录下的软件包
yum clean headers:清除缓存目录下的headers
yum clean oldheaders:清除缓存目录下旧的headers
yum clean,yum clean all(=yum clean packages;yum clean oldheaders):清除缓存目录下的软件包及旧的headers

实例：利用yum的功能，找出以pam开头的软件名称有哪些
yum list pam*

卸载软件包
yum remove mariadb-libs.x86_64

yum list installed
rpm -qa
列表所有已经安装的软件

查看某个命令是属于哪个包
yum provides */netstat

查看系统是否安装了某个包
rpm -qa | grep gcc
yum info gcc
卸载
rpm -e --nodeps mariadb-libs-5.5.64-1.el7.x86_64
列出所有已安装软件包
rpm -qa
删除软件包
rpm -e packagename
强制删除软件和依赖包
rpm -e --nodeps packagename
查询是否安装
rpm -q 包名
安装软件包
rpm -ivh 包名

查看安装位置
rpm -qal | grep gcc
rpm -ql gcc

vi命令
vi 文件名
a进入编辑模式
esc退出编辑模式
:q不保存退出
:wq保存退出

source /etc/profile
让配置文件生效

pwd
查看当前所在路径

=======================================================================================================
安装jdk
上传文件到/usr/java
解压
在/etc/profile最后添加
export JAVA_HOME=/usr/java/jdk1.8.0_231
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib:$CLASSPATH
export JAVA_PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin
export PATH=$PATH:${JAVA_PATH}
让配置文件生效
source profile

安装tomcat
上传文件到/usr/tomcat
解压
修改/usr/tomcat/apache-tomcat-9.0.31/bin/catalina.sh文件
JAVA_HOME=/usr/java/jdk1.8.0_231
JRE_HOME=$JAVA_HOME/jre
# OS specific support.  $var _must_ be set to either true or false.
=======================================================================================================

=======================================================================================================
安装FastDFS（两个包的版本，使用libfastcommon-master.zip和FastDFS_v5.05.tar.gz可成功安装）
安装软件
yum -y install gcc
yum -y install gcc-c++
yum -y install libevent
安装libfastcommon包
地址：https://github.com/happyfish100/libfastcommon/releases
https://github.com/happyfish100/libfastcommon绿色的按钮可以下载libfastcommon-master.zip
将libfastcommon解压到/usr/local/fast，如果没有路径，创建，如果不支持unzip，安装yum install unzip
unzip libfastcommon-master.zip -d /usr/local/fast/
编译，安装
./make.sh
./make.sh install
因为FastDFS主程序设置的目录为/usr/local/lib/，所以需要创建/usr/lib64/下的一些核心执行程序的软链接文件
ln -s /usr/lib64/libfastcommon.so /usr/local/lib/libfastcommon.so
如果/usr/lib/目录下，没有生成libfastcommon.so，也创建软链接
ln -s /usr/lib64/libfastcommon.so /usr/lib/libfastcommon.so
-s：软链接（符号链接）
将FastDFS解压
tar -zxvf FastDFS_v5.08.tar.gz -C /usr/local/fast/
编译，安装
./make.sh
./make.sh install
因为安装使用到了perl命令，所以安装yum -y install perl
创建软链接
ln -s /usr/lib64/libfdfsclient.so /usr/local/lib/libfdfsclient.so
如果/usr/lib/目录下，没有创建软件链接，也创建软链接
ln -s /usr/lib64/libfdfsclient.so /usr/lib/libfdfsclient.so
复制（可以不需要复制，直接修改/etc/fdfs/里生成的三个文件）
cp /usr/local/fast/FastDFS/conf/* /etc/fdfs/
配置和启动tracker
创建目录
mkdir fastdfs
修改文件
/etc/fdfs/tracker.conf.sample
base_path=/home/fastdfs
http.server_port=80
重启
/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf.sample restart
配置和启动storage
mkdir fastdfs
mkdir fdfs_storage
修改文件
/etc/fdfs/storage.conf.sample
配置组名
group_name=group1
base_path=/home/fastdfs
store存放文件的位置（store_path）
store_path0=/home/fdfs_storage
如果有多个挂载磁盘则定义多个store_path，如下
store_path1=....
store_path2=....
配置tracker服务器：IP
tracker_server=172.18.12.104:22122
如果有多个则配置多个tracher
tracker_server=172.18.12.105:22122
设置http端口
http.server_port=88
重启
/usr/bin/fdfs_storaged /etc/fdfs/storage.conf.sample restart

启动与停止
/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf.sample start
/usr/bin/fdfs_storaged /etc/fdfs/storage.conf.sample start
/usr/local/fast/FastDFS/stop.sh /etc/fdfs/tracker.conf.sample
/usr/local/fast/FastDFS/stop.sh /etc/fdfs/storage.conf.sample

测试上传
/usr/bin/fdfs_test /etc/fdfs/client.conf.sample upload /home/Activiti数据表.png

FastDFS整合nginx
上传fastdfs-nginx-module_v1.16.tar.gz到/usr/local并解压
修改/usr/local/fast/fastdfs-nginx-module/src文件夹下的config，将/usr/local修改为/usr
将/usr/local/fast/fastdfs-nginx-module/src下的mod_fastdfs.conf复制到/etc/fdfs/文件夹下，并修改
base_path=/home/fastdfs
tracker_server=172.18.12.104:22122
url_have_group_name = true
store_path0=/home/fdfs_storage

安装Nginx
上传安装包到/usr/local/并解压
安装nginx依赖库
yum -y install pcre
yum -y install pcre-devel
yum -y install zlib
yum -y install zlib-devel
yum -y install openssl
yum -y install openssl-devel

进入nginx解压目录
加入模块命令配置
./configure --add-module=/usr/local/fast/fastdfs-nginx-module/src
编译并安装
make
make install
复制/usr/local/fast/FastDFS/conf文件夹下的mime.types文件http.conf文件到/etc/fdfs/目录
cd /usr/local/fast/FastDFS/conf
cp http.conf mime.types /etc/fdfs/
回到nginx安装目录下，修改nginx.conf
cd /usr/local/nginx/conf
pid        /usr/local/nginx/logs/nginx.pid;
location /group1/M00/ {
#root   html;
#index  index.html index.htm;
root /home/fdfs_storage/data;
ngx_fastdfs_module;
}
启动nginx
到nginx安装目录sbin下
./nginx

启动nginx
nginx -c /path/to/nginx.conf
关闭nginx
nginx -s stop快速停止
nginx -s quit完整有序停止
重启nginx
nginx -s reload修改配置后重新加载生效
nginx -s reopen重新打开日志文件
nginx -t -c /path/to/nginx.conf测试nginx配置文件是否正确
其它停止nginx方式
ps -ef | grep nginx
kill -QUIT 主进程号：从容停止
kill -TERM 主进程号：快速停止
pkill -9 nginx：强制停止
平滑重启
kill -HUP 主进程号
=======================================================================================================

查看进程
ps -ef | grep fdfs


ls | grep 字符串
模糊列表文件名

cat /etc/redhat-release
查看系统版本

rm -rf
删除文件夹及其子文件，并且当子文件为只读时，也可以删除，不需要提示

代码版本管理工具
yum -y install mercurial.x86_64
hg --version

查看目录大小
du -sh jdk12-06222165c35f
du -h --max-depth=1 /home/openjdk/jdk12-06222165c35f
-h:以人类可读的方式显示
-a:显示目录占用的磁盘空间大小，还要显示其下目录和文件占用磁盘空间的大小
-s:显示目录占用的磁盘空间大小，不要显示其下目录和文件占用磁盘空间的大小

查看命令位置
which java

编译jdk
编译FastDebug版、仅含Server模式的HotSpot虚拟机
bash configure --enable-debug --with-jvm-variants=server
=======================================================================================================

查看某个端口占用情况
netstat -lnp|grep 8080

杀死进程
kill -9 进程号

查看ip
ip addr

查看文件编码和转换编码
file -i filename
iconv

检查用户组
cat /etc/group|grep mysql
创建用户组，添加用户
groupadd mysql
useradd -r -g mysql mysql
